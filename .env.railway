# Environment Variables Template for Railway Deployment

## Required Environment Variables

# Node.js Environment
NODE_ENV=production

# Server Configuration  
PORT=3001

# Database Configuration (Railway will auto-generate DATABASE_URL)
DATABASE_URL=postgres://username:password@host:port/database

# JWT Secret (MUST change this for production)
JWT_SECRET=your-super-secret-jwt-key-at-least-32-characters-long

# CORS Configuration (optional, defaults to *)
CORS_ORIGIN=*

## Railway Setup Instructions

1. Copy this file and rename to `.env` for local development
2. Set your local PostgreSQL DATABASE_URL
3. Generate a strong JWT_SECRET (at least 32 characters)
4. For Railway deployment:
   - Railway will auto-generate DATABASE_URL for PostgreSQL
   - You only need to set JWT_SECRET in Railway dashboard
   - NODE_ENV will be automatically set to 'production'

## Generate Strong JWT Secret

```bash
# Option 1: Using Node.js
node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"

# Option 2: Using openssl
openssl rand -hex 32

# Option 3: Online generator
# Visit: https://www.allkeysgenerator.com/Random/Security-Encryption-Key-Generator.aspx
```

## Railway Environment Variables

In Railway dashboard, set these variables:
- JWT_SECRET=your-generated-secret-key
- NODE_ENV=production (auto-set)
- PORT=3001 (auto-set)
- DATABASE_URL=auto-generated